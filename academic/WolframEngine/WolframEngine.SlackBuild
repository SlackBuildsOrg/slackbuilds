#!/bin/bash

# Slackware build script for WolframEngine

# Copyright 2023-2024, Alexander Verbovetsky, Moscow, Russia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=WolframEngine
VERSION=${VERSION:-14.0.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  ARCH="$( uname -m )"
fi

if [ "$ARCH" != "x86_64" ]; then
  echo "Only x86_64 is supported."
  exit 1
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
mkdir $PRGNAM-$VERSION
cd $PRGNAM-$VERSION

SCRIPT=$(find -L $CWD -maxdepth 1 -type f -exec grep -al \
"label=\"Wolfram Engine ${VERSION} for LINUX Installer Archive\"" {} \;)
eval $(grep -a "^filesizes=" -m 1 $SCRIPT)
eval $(grep -a "^MD5=" $SCRIPT)
ssize=$(grep -a offset -m 1 $SCRIPT | sed 's/^.* \([0-9]\+\) .*$/\1/')
((ssize++))
tail +$ssize $SCRIPT | head -c $filesizes | tee >(tar x) \
  | md5sum | grep $MD5 > /dev/null
MDIR="/opt/$PRGNAM"
mkdir -p $PKG$MDIR
find -L Unix/Files -maxdepth 2 -type f -name "contents.tar.?z" \
  -exec tar xvf '{}' -C $PKG$MDIR \;

chown -R root:root $PKG$MDIR
find -L $PKG$MDIR \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir -p $PKG/usr/bin
for i in $(find -L $PKG$MDIR/Executables \
  -maxdepth 1 -type f -printf "%f\n"); do
    ln -s $MDIR/Executables/${i} $PKG/usr/bin
done
ln -s $MDIR/SystemFiles/Kernel/Binaries/Linux-x86-64/wolframscript \
  $PKG/usr/bin

mkdir -p $PKG/usr/share/mime/application
cp -a $PKG$MDIR/SystemFiles/Installation/*.xml \
  $PKG/usr/share/mime/application

mkdir -p $PKG/usr/share/icons/hicolor/{32x32,64x64,128x128}/{apps,mimetypes}
for i in 32 64 128; do
cp -a $PKG$MDIR/SystemFiles/FrontEnd/SystemResources/X/App-$i.png \
  $PKG/usr/share/icons/hicolor/${i}x${i}/apps/wolfram-wolframlanguage.png
for m in $(basename -a \
  $(ls $PKG$MDIR/SystemFiles/FrontEnd/SystemResources/X/vnd.wolfram.*${i}.png) \
    | cut -d- -f1); do
cp -a $PKG$MDIR/SystemFiles/FrontEnd/SystemResources/X/${m}-${i}.png \
  $PKG/usr/share/icons/hicolor/${i}x${i}/mimetypes/application-${m}.png
done
done

find -L $PKG/opt/WolframEngine/SystemFiles -type f \
  \( -name "*.so" -o -name '*.so.*' \) -exec chmod 755 {} \;

mkdir -p $PKG/usr/man/man1
for i in $(find -L $PKG$MDIR/SystemFiles/SystemDocumentation/Unix \
  -maxdepth 1 -type f -name "*.1" -printf "%f\n"); do
gzip -9 -c $PKG$MDIR/SystemFiles/SystemDocumentation/Unix/${i} \
  > $PKG/usr/man/man1/${i}.gz
done

INFO=$(find -L Unix/Files -maxdepth 2 -type f -name "info" -exec cat '{}' \+ \
  | sort -u)
CreationID=$(echo "$INFO" | grep "^CreationID" | awk '{print $2}')
VersionNumber=$(echo "$INFO" | grep "^VersionNumber" | awk '{print $2}')
ReleaseNumber=$(echo "$INFO" | grep "^ReleaseNumber" | awk '{print $2}')
MinorReleaseNumber=$(echo "$INFO" | grep "^MinorReleaseNumber" \
  | awk '{print $2}')
FullVersionNumber="${VersionNumber}.${ReleaseNumber}.${MinorReleaseNumber}"

echo "${CreationID}" > $PKG$MDIR/.CreationID
echo "FullVersionNumber: ${FullVersionNumber}" > $PKG$MDIR/.Revision
echo "CreationID: ${CreationID}" >> $PKG$MDIR/.Revision
echo "${FullVersionNumber}" > $PKG$MDIR/.VersionID

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
