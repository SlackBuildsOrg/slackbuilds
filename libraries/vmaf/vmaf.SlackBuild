#!/bin/bash

# Slackware build script for vmaf

# Copyright 2022-2025 Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=vmaf
VERSION=${VERSION:-3.0.0}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-march=i586 -mtune=i686 -pipe -O2 -fPIC"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-march=i686 -mtune=i686 -pipe -O2 -fPIC"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-march=x86-64 -mtune=generic -pipe -O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

if [ ! -z "${PRINT_PACKAGE_NAME}"  ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS" meson build libvmaf \
    -Dprefix=/usr \
    -Dlibdir=/usr/lib${LIBDIRSUFFIX} \
    -Dlocalstatedir=/var \
    -Dmandir=/usr/man \
    -Dsysconfdir=/etc \
    -Denable_float=true \
    -Dbuildtype=release \
    -Dstrip=true

ninja -v -C build
DESTDIR=$PKG ninja -v -C build install

mkdir -pv $PKG/usr/bin
install -Dvm 0755 build/tools/vmaf -t $PKG/usr/bin

# copy the models that compiled during our build
# vmaf now use .json based model files.
mkdir -pv $PKG/usr/share/$PRGNAM-$VERSION/model

cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_4k_v0.6.1.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_4k_v0.6.1neg.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_b_v0.6.3.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_float_4k_v0.6.1.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_float_b_v0.6.3.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_float_v0.6.1.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_float_v0.6.1neg.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_v0.6.1.json "$PKG/usr/share/$PRGNAM-$VERSION/model"
cp -dr --no-preserve='ownership' $TMP/$PRGNAM-$VERSION/build/src/vmaf_v0.6.1neg.json  "$PKG/usr/share/$PRGNAM-$VERSION/model"

find $TMP/$PRGNAM-$VERSION/model/other_models -name '*.json' -type f -exec install -D -v -m0644 {} -t "$PKG/usr/share/$PRGNAM-$VERSION/model" \;
find $TMP/$PRGNAM-$VERSION/model/vmaf_4k_rb_v0.6.2 -name '*.json' -type f -exec install -D -v -m0644 {} -t "$PKG/usr/share/$PRGNAM-$VERSION/model" \;
find $TMP/$PRGNAM-$VERSION/model/vmaf_rb_v0.6.2 -name '*.json' -type f -exec install -D -v -m0644 {} -t "$PKG/usr/share/$PRGNAM-$VERSION/model" \;
find $TMP/$PRGNAM-$VERSION/model/vmaf_rb_v0.6.3 -name '*.json' -type f -exec install -D -v -m0644 {} -t "$PKG/usr/share/$PRGNAM-$VERSION/model" \;

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" |
  grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

# Don't ship .la files:
rm -f $PKG/usr/lib${LIBDIRSUFFIX}/*.la

#cd $TMP/$PRGNAM-$VERSION

mkdir -pv  $PKG/usr/doc/$PRGNAM-$VERSION
cp -a CHANGELOG.md LICENSE README.md    $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -pv $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
