#!/bin/bash

# Slackware build script for SLADE

# Copyright 2015 Dugan Chen Canada
# Copyright 2020 B. Watson
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# 20201109 bkw: update for v3.2.12a
# 20200416 bkw:
# - take over maintenance
# - update for v3.1.11
# - binary in /usr/games
# - install icon in right place, symlink to old location
# - get rid of our .desktop file (upstream provides one now)

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=SLADE
VERSION=${VERSION:-3.1.12a}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L .  -perm /111 -a \! -perm 755 -a -exec chmod 755 {} \+ -o \
        \! -perm /111 -a \! -perm 644 -a -exec chmod 644 {} \+

# 20200416 bkw: game binaries do not belong in /usr/bin.
sed -i 's,\<bin\>,games,' src/CMakeLists.txt

# 20200416 bkw: don't depend on unstable /usr/bin/wx-config symlink.
# stupid thing insists on searching for wx-config in PATH, instead of
# allowing us to explicitly give a full path and name for the script, so:
WXCONF=/usr/lib$LIBDIRSUFFIX/wx/config/gtk2-unicode-3.0
WXTMP=$( pwd )/wxtmp
mkdir -p $WXTMP
ln -s $WXCONF $WXTMP/wx-config

# 20200416 bkw: our wxGTK3 package doesn't include wxWebView, and it's built
# with gtk+-2, not 3. This stuff isn't autodetected so we help it along.
cd build
  cmake \
    -DWITH_WXPATH=$WXTMP \
    -DNO_WEBVIEW=ON \
    -DWX_GTK3=OFF \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release ..
  make
  make install/strip DESTDIR=$PKG
cd ..

mkdir -p $PKG/usr/share/icons/hicolor/128x128/apps \
         $PKG/usr/share/pixmaps

# 20200416 bkw: don't want to hardcode the icon name here.
cd $PKG/usr/share/icons
  icon="$( /bin/ls *$PRGNAM.png | head -1 )"
  mv $icon hicolor/128x128/apps
  ln -s hicolor/128x128/apps/$icon .
  ln -s ../icons/hicolor/128x128/apps/$icon ../pixmaps/$PRGNAM.png
cd -

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a README* gpl-2.0.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
