skalibs is a package centralizing the free software / open source C
development files used for building all software at skarnet.org: it
contains essentially general-purpose libraries. You will need to install
skalibs if you plan to build skarnet.org software. The point is that you
won't have to download and compile big libraries, and care about
portability issues, everytime you need to build a package: do it only
once.

skalibs can also be used as a sound basic start for C development.
There are a lot of general-purpose libraries out there; but if your main
goal is to produce small and secure C code with a focus on system
programming, skalibs might be for you.

NOTE:
Upstream recommends building skarnet.org software with static libraries,
as most of skarnet.org software are small enough that shared libraries
are generally not worth using. Therefore, this SlackBuild script will
only build the static libraries by default.

If you want to also build the shared libraries, pass BUILD_SHARED=yes
environment variable to the script like below:

    BUILD_SHARED=yes ./skalibs.SlackBuild

Similarly, to avoid building the static libraries, you can pass
BUILD_STATIC=no to the script. For example, to only build the shared
libraries and not the static ones, you can do something like

    BUILD_SHARED=yes BUILD_STATIC=no ./skalibs.SlackBuild

If you just want to build and use skarnet.org software, building only
the static libraries should be sufficient.

Also, the execvep() function from skalibs (used by all skarnet.org
software) has a default executable search path that will be used if the
PATH environment variable is undefined. The upstream default is
/usr/bin:/bin, but the script defaults to /usr/bin:/bin:/usr/sbin:/sbin,
where most system-installed binaries on Slackware reside. Pass
DEF_PATH=some:path:list to the script if you want to change it, e.g.,

    DEF_PATH=/bin:/sbin ./skalibs.SlackBuild
