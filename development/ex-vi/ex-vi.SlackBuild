#!/bin/bash

# Slackware build script for ex-vi

# Written by B. Watson (yalhcru@gmail.com)

# Licensed under the WTFPL. See http://www.wtfpl.net/txt/copying/ for details.

# 20160726 bkw: build 3
# parallel make (-jN where N > 1) fails on Slack 14.2, add -j1

# 20150331 bkw: build 2
# Increase TUBE* constants in config.h to allow for larger terminals.

# vi has hardcoded terminal size limits of 160 columns and 100 lines.
# These days it's not unusual to have a 1920x1080 framenbuffer with 8x16
# console font, for 240x67 characters. Increase limits here. Doing so uses
# TUBESIZE bytes of memory at startup, and another TUBESIZE bytes every
# time you switch from ex mode to visual mode, so let's not get too crazy
# with the cheez whiz. The real problem is TUBECOLS (the width): if the
# terminal exceeds this, you get 'Terminal too wide' and are stuck in ex
# mode. Exceeding TUBELINES just means vi ignores the extra lines at the
# bottom of the terminal.

# Default to 320x200, which would be enough for a 8x16 console font on a
# WQXGA 2560x1600 display, or a 2/3-width full-height X terminal on 4K
# UHDTV (3840x2160). If I don't make this configurable, someone will
# need it to be. So:
TUBECOLS=${TUBECOLS:-320}
TUBELINES=${TUBELINES:-200}

# We now return you to your regularly scheduled programming:
PRGNAM=ex-vi
VERSION=${VERSION:-050325}
BUILD=${BUILD:-3}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

TARNAME=ex

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $TARNAME-$VERSION
tar xvf $CWD/$TARNAME-$VERSION.tar.bz2
cd $TARNAME-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
 -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Don't install the binary with the sticky bit set. It doesn't do anything
# on Linux, and might set off alarm bells.
sed -i 's,-m 1755,-m 755,' Makefile

# Apologies for the fugly sed code here. It works, though.
sed -i -e "/^#define/s,\\(TUBESIZE *\\).*$,\\1 $(( TUBECOLS * TUBELINES ))," \
       -e "/^#define/s,\\(TUBECOLS *\\).*$,\\1 $TUBECOLS," \
       -e "/^#define/s,\\(TUBELINES *\\).*$,\\1 $TUBELINES," \
       config.h

# To avoid conflicts with Slackware's elvis and/or vim, we install to /opt and
# include a login script to set PATH and MANPATH.
make -j1 all install \
  RPMCFLAGS="$SLKCFLAGS" \
  MANDIR=/opt/$PRGNAM/man \
  PREFIX=/opt/$PRGNAM \
  INSTALL=install \
  DESTDIR=$PKG

# binary already stripped, yay

find $PKG/opt/$PRGNAM/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/opt/$PRGNAM/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/etc/profile.d
install -m0755 -oroot -groot $CWD/$PRGNAM.sh.new $PKG/etc/profile.d
install -m0755 -oroot -groot $CWD/$PRGNAM.csh.new $PKG/etc/profile.d

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a Changes LICENSE README TODO $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README_Slackware.txt > $PKG/usr/doc/$PRGNAM-$VERSION/README_Slackware.txt
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
