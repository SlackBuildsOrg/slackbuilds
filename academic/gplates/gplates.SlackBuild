#!/bin/bash

# Slackware build script for gplates

# Copyright 2022-2025 Giancarlo Dessi, Cagliari, IT
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=gplates
SRCNAM=GPlates-GPlates
VERSION=${VERSION:-2.5}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
GEODATADIR=GeoData
GEODATAVERSION=$VERSION.0

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
rm -rf $GEODATADIR
tar xvf $CWD/$SRCNAM-$VERSION.tar.gz

# Detect if GeoData archive if present
if [ -f $CWD/gplates_${GEODATAVERSION}_geodata.zip ]; then
  echo "*********************************************************"
  echo "* GeoData source found! This slackbuild will include in *"
  echo "* the install package the official datasets released by *"
  echo "* the EarthByte project.                                *"
  echo "*                                                       *"
  echo "* Remember that you can also use other compatible       *"
  echo "* datasets.                                             *"
  echo "*********************************************************"

  withGeoData=" -DGPLATES_INSTALL_GEO_DATA=true \
                -DGPLATES_INSTALL_GEO_DATA_DIR=$TMP/$GEODATADIR "
  unzip $CWD/gplates_${GEODATAVERSION}_geodata.zip -d $TMP

  
else
  echo "*********************************************************"
  echo "* WARNING! GeoData source released by EarthByte project *"
  echo "* not found. This slackbuild will not include datasets  *"
  echo "* in the install package but only the application.      *"
  echo "*                                                       *"
  echo "* Remember that GPlates requires compatible datasets    *"
  echo "* that you have to use in runtime.                      *"
  echo "*********************************************************"

  withGeoData=" -DGPLATES_INSTALL_GEO_DATA=false "
fi

cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CMAKEVER=$(cmake --version | head -1 | cut -f3 -d" ")
CMAKEVER=${CMAKEVER:2:2}

# Prevent cmake warnings in current
if [ $CMAKEVER = "21" ]; then
   CMAKE_POLICY=""
else
   CMAKE_POLICY="-DCMAKE_POLICY_DEFAULT_CMP0167=OLD"
fi

  
# This fix errors given by gcc 11 or earlier compilers
patch -p1 < $CWD/boost-placeholders.patch

# Fixes for Qwt-6.3.0 (thanks to Christoph Willing from Slackbuilds.org)
sed -i -e '/qwt_text.h/a#include "qwt_series_data.h"' -e 's:class QwtPointSeriesData://class QwtPointSeriesData:' src/qt-widgets/KinematicGraphPicker.h
sed -i -e '/GraphsDialogUi.h/a#include "qwt_series_data.h"' -e 's:class QwtPointSeriesData://class QwtPointSeriesData:' src/qt-widgets/KinematicGraphsDialog.h

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    $CMAKE_POLICY \
    $withGeoData \
    -DCMAKE_BUILD_TYPE=Release ..
  make
  make install/strip DESTDIR=$PKG
cd ..

rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

mv $PKG/usr/share/man $PKG/usr/man

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Include application icon and desktop entry
mkdir -p $PKG/usr/share/icons/hicolor/160x160/apps
cp -a src/qt-resources/GPlates-icon-160x160-opaque.png \
  $PKG/usr/share/icons/hicolor/160x160/apps/gplates.png

mkdir -p $PKG/usr/share/applications
cp -a $CWD/gplates.desktop $PKG/usr/share/applications
chown root:root $PKG/usr/share/applications/gplates.desktop

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS CHANGELOG COPYING CREDITS README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
