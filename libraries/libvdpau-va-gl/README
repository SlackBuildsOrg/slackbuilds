Briefly, this is the VDPAU driver with VA-API/OpenGL backend.

There are applications exists that can use VDPAU. Amongst them are
Adobe Flash Player and Mplayer. They both can use VDPAU, but since
there is no VDPAU available on Intel chips, they fall back to
different drawing techniques. And while Mplayer can use XVideo
extension to offload scaling to GPU, Flash Player can not and does
all scaling in software. If there was VDPAU available, CPU usage
could be significantly lower.

VDPAU is not vendor-locked technology. Even official documentation
mentions possibility of other drivers. They should be named as
libvdpau_drivername.so.1 and placed where linker could find them.
/usr/lib usually works fine. Which driver to use is determined by
asking X server about current driver name or by using VDPAU_DRIVER
environment variable.

Here is one. Named libvdpau_va_gl.so.1, it uses OpenGL under the
hood to accelerate drawing and scaling and VA-API (if available)
to accelerate video decoding. For now VA-API is available on some
Intel chips, and on some AMD video adapters with help of
xvba-va-driver. OpenGL is available, you know, on systems with
OpenGL available.

After installation, it may be necessary to edit
  /etc/profile.d/vdpau.{sh,csh}
to select a backend by uncommenting the appropriate VDPAU_DRIVER.
