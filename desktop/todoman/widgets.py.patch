--- widgets.py	2023-10-25 16:23:17.886518163 +0200
+++ widgets.py	2023-10-25 16:17:16.178507433 +0200
@@ -39,15 +39,11 @@
         ("Ctrl-O", "Edit in $EDITOR"),
     )
 
-    def __init__(self, parent: urwid.Widget, *a, **kw) -> None:
+    def __init__(self, parent, *a, **kw):
         self._parent = parent
         super().__init__(*a, **kw)
 
-    def keypress(
-        self,
-        size: tuple[int, int] | tuple[int] | tuple[()],
-        key: str,
-    ) -> None:
+    def keypress(self,size,key):
         if key == "ctrl w":
             self._delete_word()
         elif key == "ctrl u":
@@ -69,13 +65,13 @@
 
         return None
 
-    def _delete_forward_letter(self) -> None:
+    def _delete_forward_letter(self):
         text = self.get_edit_text()
         pos = self.edit_pos
         text = text[:pos] + text[pos + 1 :]
         self.set_edit_text(text)
 
-    def _delete_word(self) -> None:
+    def _delete_word(self):
         """delete word before cursor"""
         text = self.get_edit_text()
         t = text[: self.edit_pos].rstrip()
@@ -86,7 +82,7 @@
         self.set_edit_text(f_text + text[self.edit_pos :])
         self.set_edit_pos(len(f_text))
 
-    def _delete_till_beginning_of_line(self) -> None:
+    def _delete_till_beginning_of_line(self):
         """delete till start of line before cursor"""
         text = self.get_edit_text()
         sol = text.rfind("\n", 0, self.edit_pos) + 1
@@ -96,7 +92,7 @@
         self.set_edit_text(before_line + text[self.edit_pos :])
         self.set_edit_pos(sol)
 
-    def _delete_till_end_of_line(self) -> None:
+    def _delete_till_end_of_line(self):
         """delete till end of line before cursor"""
         text = self.get_edit_text()
         eol = text.find("\n", self.edit_pos)
@@ -105,19 +101,19 @@
 
         self.set_edit_text(text[: self.edit_pos] + after_eol)
 
-    def _goto_beginning_of_line(self) -> None:
+    def _goto_beginning_of_line(self):
         text = self.get_edit_text()
         sol = text.rfind("\n", 0, self.edit_pos) + 1
         self.set_edit_pos(sol)
 
-    def _goto_end_of_line(self) -> None:
+    def _goto_end_of_line(self):
         text = self.get_edit_text()
         eol = text.find("\n", self.edit_pos)
         if eol == -1:
             eol = len(text)
         self.set_edit_pos(eol)
 
-    def _editor(self) -> None:
+    def _editor(self):
         self._parent._loop.screen.clear()
         new_text = click.edit(self.get_edit_text())
         if new_text is not None:
@@ -137,12 +133,7 @@
         [1, 2, 3, 4],
     )
 
-    def __init__(
-        self,
-        parent: urwid.Widget,
-        priority: int | None,
-        formatter_function: Callable[[int | None], str],
-    ) -> None:
+    def __init__(self,parent,priority,formatter_function):
         self._parent = parent
         self._label = urwid.SelectableIcon("", 0)
         urwid.WidgetWrap.__init__(self, self._label)
@@ -151,10 +142,10 @@
         self._formatter = formatter_function
         self._set_label()
 
-    def _set_label(self) -> None:
+    def _set_label(self):
         self.set_label(self._formatter(self._priority))
 
-    def _update_label(self, delta: int = 0) -> None:
+    def _update_label(self, delta: int = 0):
         for i, r in enumerate(PrioritySelector.RANGES):
             if self._priority in r:
                 self._priority = PrioritySelector.RANGES[
@@ -163,11 +154,7 @@
                 self._set_label()
                 return
 
-    def keypress(
-        self,
-        size: tuple[int, int] | tuple[int] | tuple[()],
-        key: str,
-    ) -> None:
+    def keypress(self,size,key):
         if key in ["right", "enter"]:
             self._update_label(1)
             return None
@@ -178,5 +165,5 @@
         return super().keypress(size, key)
 
     @property
-    def priority(self) -> int | None:
+    def priority(self):
         return self._priority
