.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "ASAPCONV" 1 "2024-03-19" "5.3.0" "SlackBuilds.org"
.SH NAME
asapconv \- convert Atari 8-bit chiptunes to .wav or .xex files
.\" RST source for asapconv(1) man page. Convert with:
.
.\" rst2man.py asapconv.rst > asapconv.1
.
.SH SYNOPSIS
.sp
\fBasapconv\fP [\fI\-options\fP] \fBinputfile\fP [\fI\&...\fP]
.SH DESCRIPTION
.sp
\fBasapconv\fP converts one or more Atari 8\-bit chiptune files to
\fI\&.wav\fP, raw audio sample files, \fI\&.xex\fP (Atari 8\-bit executables), or
the \fI\&.sap\fP chiptune format.
.sp
The supported input formats are: SAP, CMC, CM3, CMR, CMS, DMC, DLT,
MPT, MPD, RMT, TMC, TM8, TM2 or FC.
.sp
Although the \fB\-\-help\fP output implies that it\(aqs possible to convert
to any supported input format, non\-SAP input files can only be
converted to \fI\&.sap\fP or the same format they\(aqre already in. Attempts
to convert between two different non\-SAP formats result in "conversion
error" and a 0\-byte output file (and a non\-zero exit status).
.sp
The only useful reason to "convert" a non\-SAP file to the format it\(aqs
already in is to relocate the music to a different Atari address,
using the \fB\-\-address=\fP option. If you don\(aqt know why you\(aqd want to
do that, you don\(aqt need to do it...
.sp
The raw audio files created by \fBasapconv\fP are headerless, containing
only the audio samples. They can be played or converted with
e.g. \fBsox\fP(1). For most purposes, \fI\&.wav\fP is more convenient.
.SH OPTIONS
.INDENT 0.0
.TP
.B \fB\-h\fP, \fB\-\-help\fP
Show built\-in help.
.TP
.B \fB\-v\fP, \fB\-\-version\fP
Show version number.
.TP
.B \fB\-o\fP \fIfile.ext\fP, \fB\-\-output\fP=file.ext
Write output to the given file. The extension must be \fI\&.wav\fP,
\fI\&.raw\fP, \fI\&.xex\fP, \fI\&.sap\fP, or the same extension as the input file. If
only an extension is given, the filename will be derived from the
input filename. If the filename part is given as \fI\-\fP (e.g. \fI\-.wav\fP),
output is written to standard output. If \fIfile\fP includes a directory
(e.g. \fIdir/foo.wav\fP), output is written to that directory, but
\fBasapconv\fP will not create the directory (it must already
exist). Output filenames can also contain printf\-style \fB%\fP
escapes; see the \fB\-\-help\fP output for details.
.TP
.B \fB\-a\fP \fIauthor\fP, \fB\-\-author\fP=author
Sets the author name in the output file.
.TP
.B \fB\-n\fP \fIname\fP, \fB\-\-name\fP=name
Sets the music name (title) in the output file.
.TP
.B \fB\-d\fP \fIdate\fP, \fB\-\-date\fP=date
Sets the creation date (DD/MM/YYYY) in the output file.
.TP
.B \fB\-s\fP \fIsong\fP, \fB\-\-song\fP=song
Select subsong number (zero\-based). The default is 0, which will be
the only subsong in a file that contains only one song. Use
\fBchksap.pl \-s filename\fP to see how many subsongs exist in a SAP file.
.TP
.B \fB\-t\fP \fBtime\fP, \fB\-\-time\fP=time
Set output length; \fBtime\fP must be given in minutes:seconds (e.g. 1:00).
.TP
.B \fB\-\-tag\fP
Include author/title/date tags in the output. Only works for \fB\&.wav\fP
and \fB\&.xex\fP output. For \fIxex\fP files, the tag information will be shown
on the Atari screen while the song is playing.
.TP
.B \fB\-m\fP \fIchannels\fP, \fB\-\-mute\fP \fIchannels\fP
For \fI\&.wav\fP or \fI\&.raw\fP output only: Mute the given list of POKEY
channels. This is a comma\-separated list of channels numbered
1 through 8. Channels 1 to 4 are the first POKEY (only POKEY,
in an unmodified Atari), and 5 to 8 are the second POKEY in a
stereo\-modded Atari.
.TP
.B \fB\-b\fP, \fB\-\-byte\-samples\fP
Use 8\-bit samples for \fI\&.wav\fP or \fI\&.raw\fP output.
.TP
.B \fB\-w\fP, \fB\-\-word\-samples\fP
Use 16\-bit samples for \fI\&.wav\fP or \fI\&.raw\fP output. This is the default already.
.TP
.B \fB\-\-address=\fP=hex\-address
Relocate music to this address. Only useful when converting to \fI\&.sap\fP
or to the same format as the input file.
.UNINDENT
.SH EXIT STATUS
.sp
\fBasapconv\fP exits with zero status on success or non\-zero on failure.
.\" EXAMPLES
.
.\" ========
.
.SH COPYRIGHT
.sp
See the file /usr/doc/asap\-5.3.0/COPYING for license information.
.SH AUTHORS
.sp
The ASAP suite was written by Piotr Fusik, with contributions from many
others (see the website for details).
.sp
This man page written for the SlackBuilds.org project
by B. Watson, and is licensed under the WTFPL.
.SH SEE ALSO
.sp
\fBchksap.pl\fP(1), \fBasap\-sdl\fP(1), \fBasap\-mplayer\fP(1), \fBsap2ntsc\fP(1), \fBsap2txt\fP(1)
.sp
The ASAP website: \fI\%https://asap.sourceforge.net/\fP
.\" Generated by docutils manpage writer.
.
