#!/bin/bash
#
# Slackware build script for wine-staging.
#
# Copyright 2023-2024 Steven Voges <Oregon, USA>
# Copyright 2016-2019 Edinaldo P. Silva, Rio de Janeiro, Brazil.
# Copyright 2015 Gethyn ThomasQuail <gethyn@bloodbathsoftworks.com>
#
# All rights reserved.
#
# Based on:
# Wine SlackBuild by David Woodfall Copyright 2011
# Some elements from Wine Slackbuilds by Eric Hameleers < alien@slackware.com >
# and PhantomX, Goiania, Brazil < https://github.com/PhantomX >.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=wine-staging
VERSION=${VERSION:-9.17}
WINEVERSION=$VERSION
STAGINGVERSION=$VERSION
ARCHS="i386,x86_64"
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

OPENGL=${OPENGL@L}
if [ "${OPENGL:-yes}" = "yes" ]; then
  do_opengl="with"
else
  do_opengl="without"
fi

BUILD_ARCH="$ARCH-slackware-linux"
SLKCFLAGS="-O2"

case "$ARCH" in
 arm)
  BUILD_ARCH="$ARCH-slackware-linux-gnueabi"
  SLKCFLAGS="-O2"
  ;;
 i?86)
  # -Os was -O2, fix for:
  # https://bugs.winehq.org/show_bug.cgi?id=42406
  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78911
  # https://bugs.gentoo.org/613128
  SLKCFLAGS="-Os -march=$ARCH -mtune=i686"
  WINE32="yes"
  ;;
 x86_64)
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  WINE64="yes"
  ;;
esac

MULTILIB=${MULTILIB@L}
if [[ "$ARCH" != "x86_64" && "$MULTILIB" = "yes" ]]; then
  echo "Cannot build for multilib on non-64bit systems."
  exit 1
elif [[ "$ARCH" = "x86_64" && "$MULTILIB" = "yes"  ]]; then
  WINETMP="$( mktemp -d $TMP/wine-test-XXXXXX )"
  echo "int main(void) {; return(0); }" > "$WINETMP/test.c"
  gcc -m32 "$WINETMP/test.c" -o /dev/null >/dev/null 2>&1 && WINE32TEST=${WINE32TEST:-yes}
  rm -rf "$WINETMP"
  if [[ $WINE32TEST = "yes" ]]; then
    ARCHS="x86_64"
    WINE32="yes"
  else
    echo "MULTILIB was requested, however the multilib test has failed."
    echo "Have the compat32 libraries been installed?"
    echo "Please see README.MULTILIB"
    exit 1
  fi
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$STAGINGVERSION wine-$WINEVERSION
tar xvf $CWD/wine-$WINEVERSION.tar.xz
tar xvf $CWD/$PRGNAM-$STAGINGVERSION.tar.gz

cd $PRGNAM-$STAGINGVERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

cd $TMP/wine-$WINEVERSION
python3 $TMP/$PRGNAM-$STAGINGVERSION/staging/patchinstall.py --all
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Fix for flex.
patch -p1 < $CWD/flex.patch
# Fix path of opencl headers.
sed 's|OpenCL/opencl.h|CL/opencl.h|g' -i configure*

if [ "$WINE64" = "yes" ]; then
  wine64="--with-wine64=../wine64"
  mkdir wine64
  cd wine64

  LDFLAGS="-L/usr/lib64 -ldl" \
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  ../configure \
    --prefix=/usr \
    --libdir=/usr/lib64 \
    --localstatedir=/var \
    --sysconfdir=/etc \
    --mandir=/usr/man \
    --enable-win64 \
    --enable-archs=$ARCHS \
    --with-x \
    --with-gnutls \
    --${do_opengl}-opengl \
    --program-prefix= \
    --program-suffix= \
    --disable-tests \
    --build=$BUILD_ARCH
  make depend
  make
  make install DESTDIR=$PKG
  cd ..
fi

if [ "$WINE32" = "yes" ]; then
  mkdir wine32
  cd wine32
  export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

  LDFLAGS="-L/usr/lib -ldl" \
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  ../configure \
    $wine64 \
    --prefix=/usr \
    --libdir=/usr/lib \
    --localstatedir=/var \
    --sysconfdir=/etc \
    --mandir=/usr/man \
    --with-x \
    --with-gnutls \
    --${do_opengl}-opengl \
    --program-prefix= \
    --program-suffix= \
    --disable-tests \
    --build=$BUILD_ARCH
  make depend
  make
  make install DESTDIR=$PKG
  cd ..
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Add font configuration:
install -d $PKG/etc/fonts/conf.{avail,d}
install -m644 $CWD/30-win32-aliases.conf $PKG/etc/fonts/conf.avail
ln -sf /etc/fonts/conf.avail/30-win32-aliases.conf $PKG/etc/fonts/conf.d/30-win32-aliases.conf
install -Dm 644 $CWD/wine-binfmt.conf $PKG/usr/lib$LIBDIRSUFFIX/binfmt.d/wine.conf

# Create Wine menu structure:
mkdir -p $PKG/etc/xdg/menus/applications-merged
cp $CWD/wine.menu $PKG/etc/xdg/menus/applications-merged

# Add a desktop menu for winecfg, wine-uninstaller and wine-browsedrive:
mkdir -p $PKG/usr/share/{applications,icons/hicolor/scalable/apps,pixmaps}

convert $CWD/wine.svg -scale 64 $PKG/usr/share/pixmaps/wine.png
cp $CWD/wine.svg $PKG/usr/share/icons/hicolor/scalable/apps/

convert $CWD/winecfg.png -scale 64 $PKG/usr/share/pixmaps/winecfg.png
convert $CWD/winecfg.png -scale 64 $PKG/usr/share/pixmaps/folder-wine.png
convert $CWD/winecfg.png -scale 64 $PKG/usr/share/pixmaps/wine-uninstaller.png

cp programs/winecfg/winecfg.svg $PKG/usr/share/icons/hicolor/scalable/apps/
cp $CWD/*.desktop $PKG/usr/share/applications/

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a ANNOUNCE.md AUTHORS COPYING.* LICENSE* MAINTAINERS README.md VERSION \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
