#!/bin/bash

# Slackware build script for pcsx2

# Copyright 2016-2018, 2020 Hunter Sezen California, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=pcsx2
VERSION=${VERSION:-1.6.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=core2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -eu

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# pcsx2 does not support x86_64 yet and does
# not plan to for the foreseeable future.
BINDIR=; MULTILIB=
if [ "$ARCH" = 'x86_64' ]; then
  BINDIR='/32'
  MULTILIB='-DCMAKE_TOOLCHAIN_FILE=cmake/linux-compiler-i386-multilib.cmake'
fi

RELEASE=Debug

if [ "${DEVEL:-0}" != 0 ]; then
  DEBUG=1
  RELEASE=Devel
fi

if [ "${DEBUG:=0}" != 0 ]; then
  [ "${ASAN:=FALSE}" != FALSE ] && ASAN=TRUE
  SLKCFLAGS="$(printf %s "$SLKCFLAGS" | sed 's/-O2/-O0/')"
else
  ASAN=FALSE
  RELEASE=Release
fi

[ "${EGL_API:=OFF}" != OFF ] && EGL_API=ON

# Handle this in doinst.sh instead
# https://github.com/PCSX2/pcsx2/issues/2699
sed -i '/setcap/d' pcsx2/CMakeLists.txt

# Use a font included with Slackware
# osd error: 'Failed to init the freetype face'
sed -i \
  's|truetype/freefont/FreeSerif.ttf|TTF/LiberationSerif-Regular.ttf|' \
  plugins/GSdx/GSdx.cpp

# spu2-x: Make portaudio an optional dependency.
# https://github.com/PCSX2/pcsx2/pull/3110
# https://github.com/PCSX2/pcsx2/commit/84d090e2fde50c66b965b84c73abd9f04a1770dd
patch -p1 < $CWD/portaudio.patch

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DDOC_DIR=/usr/doc/$PRGNAM-$VERSION \
    -DMAN_DIR=/usr/man \
    -DwxWidgets_CONFIG_EXECUTABLE=/usr/bin${BINDIR}/wx-config \
    -DwxWidgets_wxrc_EXECUTABLE=/usr/bin${BINDIR}/wxrc-3.0 \
    -DBUILD_REPLAY_LOADERS=TRUE \
    -DDISABLE_BUILD_DATE=ON \
    -DGSDX_LEGACY=ON \
    -DPACKAGE_MODE=ON \
    -DXDG_STD=ON \
    -DEGL_API=$EGL_API \
    -DUSE_ASAN=$ASAN \
    $MULTILIB \
    -DCMAKE_BUILD_TYPE=$RELEASE ..
  make
  make install DESTDIR=$PKG
cd ..

if [ "$DEBUG" = 0 ]; then
  find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" |
    grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
fi

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a pcsx2/Docs/* bin/docs/*.html bin/docs/*.txt CONTRIBUTING.md COPYING* \
  README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Fix doinst.sh for x86_64
[ "$ARCH" != 'x86_64' ] ||
  sed -i 's|-loaders |-loaders-32 |' $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
