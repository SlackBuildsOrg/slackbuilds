#!/bin/bash

# Slackware build script for xmrig

# Copyright 2023-2024 Bloyburt
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=xmrig
VERSION=${VERSION:-6.21.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Donations can be enabled/disabled here
[ "${DONATE:-yes}" = no ] && patch src/donate.h < $CWD/donate.patch

# Algorithms can be enabled/disabled here
[ "${WITH_CN_LITE:-yes}" = no ] && WITH_CN_LITE='-DWITH_CN_LITE=OFF'
[ "${WITH_CN_HEAVY:-yes}" = no ] && WITH_CN_HEAVY='-DWITH_CN_HEAVY=OFF'
[ "${WITH_CN_PICO:-yes}" = no ] && WITH_CN_PICO='-DWITH_CN_PICO=OFF'
[ "${WITH_CN_FEMTO:-yes}" = no ] && WITH_CN_FEMTO='-DWITH_CN_FEMTO=OFF'
[ "${WITH_RANDOMX:-yes}" = no ] && WITH_RANDOMX='-DWITH_RANDOMX=OFF'
[ "${WITH_ARGON2:-yes}" = no ] && WITH_ARGON2='-DWITH_ARGON2=OFF'
[ "${WITH_KAPOW:-yes}" = no ] && WITH_KAPOW='-DWITH_KAPOW=OFF'
[ "${WITH_GHOSTRIDER:-yes}" = no ] && WITH_GHOSTRIDER='-DWITH_GHOSTRIDER=OFF'

# Features can be enabled/disabled here
[ "${WITH_HWLOC:-yes}" = no ] && WITH_HWLOC='-DWITH_HWLOC=OFF'
[ "${WITH_LIBCPUID:-yes}" = no ] && WITH_LIBCPUID='-DWITH_LIBCPUID=OFF'
[ "${WITH_HTTP:-yes}" = no ] && WITH_HTTP='-DWITH_HTTP=OFF'
[ "${WITH_TLS:-yes}" = no ] && WITH_TLS='-DWITH_TLS=OFF'
[ "${WITH_ASM:-yes}" = no ] && WITH_ASM='-DWITH_ASM=OFF'
[ "${WITH_EMBEDDED_CONFIG:-no}" = yes ] && WITH_EMBEDDED_CONFIG='-DWITH_EMBEDDED_CONFIG=ON'
[ "${WITH_OPENCL:-yes}" = no ] && WITH_OPENCL='-DWITH_OPENCL=OFF'
[ "${WITH_CUDA:-no}" = yes ] && WITH_CUDA='-DWITH_CUDA=ON'
[ "${WITH_NVML:-no}" = yes ] && WITH_NVML='-DWITH_NVML=ON'
[ "${WITH_MSR:-yes}" = no ] && WITH_MSR='-DWITH_MSR=OFF'
[ "${WITH_ADL:-yes}" = no ] && WITH_ADL='-DWITH_ADL=OFF'
[ "${WITH_PROFILING:-no}" = yes ] && WITH_PROFILING='-DWITH_PROFILING=ON'
[ "${WITH_SSE4_1:-yes}" = no ] && WITH_SSE4_1='-DWITH_SSE4_1=OFF'
[ "${WITH_BENCHMARK:-yes}" = no ] && WITH_BENCHMARK='-DWITH_BENCHMARK=OFF'
[ "${WITH_SECURE_JIT:-no}" = yes ] && WITH_SECURE_JIT='-DWITH_SECURE_JIT=ON'
[ "${WITH_DMI:-yes}" = no ] && WITH_DMI='-DWITH_DMI=OFF'

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    $WITH_CN_LITE \
    $WITH_CN_HEAVY \
    $WITH_CN_PICO \
    $WITH_CN_FEMTO \
    $WITH_RANDOMX \
    $WITH_ARGON2 \
    $WITH_KAPOW \
    $WITH_GHOSTRIDER \
    $WITH_HWLOC \
    $WITH_LIBCPUID \
    $WITH_HTTP \
    $WITH_TLS \
    $WITH_ASM \
    $WITH_EMBEDDED_CONFIG \
    $WITH_OPENCL \
    $WITH_CUDA \
    $WITH_NVML \
    $WITH_MSR \
    $WITH_ADL \
    $WITH_PROFILING \
    $WITH_SSE4_1 \
    $WITH_BENCHMARK \
    $WITH_SECURE_JIT \
    $WITH_DMI \
    -DCMAKE_BUILD_TYPE=Release ..
  make
cd ..

mkdir -p $PKG/usr/bin
cp -a build/$PRGNAM $PKG/usr/bin/$PRGNAM

rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a doc *.md LICENSE $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
