--- hhvm-4.168.2/third-party/libzip/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.449428587 +0200
@@ -23,10 +23,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   LIBZIP_DOWNLOAD_ARGS
-  SOURCE_URL
-  "https://libzip.org/download/libzip-1.6.1.tar.gz"
-  SOURCE_HASH
-  "SHA256=06eb8e9141fd19e2788cabaea9c9c2fd4d488d9e1484eb474bbfcac78e7b1d88"
 )
 
 ExternalProject_Add(
--- hhvm-4.168.2/third-party/re2/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.453034229 +0200
@@ -12,10 +12,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   RE2_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/google/re2/archive/refs/tags/2021-11-01.tar.gz"
-  SOURCE_HASH
-  "SHA256=8c45f7fba029ab41f2a7e6545058d9eec94eef97ce70df58e92d85cfc08b4669"
   FILENAME_PREFIX "re2-"
 )
 
--- hhvm-4.168.2/third-party/zstd/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.454513420 +0200
@@ -36,10 +36,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   ZSTD_DOWNLOAD_ARGS
-  SOURCE_URL
-  "https://github.com/facebook/zstd/releases/download/v1.4.9/zstd-1.4.9.tar.gz"
-  SOURCE_HASH
-  "SHA512=10d325c844be43f801c798158c6f1d1ab57401abf1e783e04f6b9e4ac0ba53cf487204fa3244370b1ade239d5f3a784bf1829e206c4ba61fdd9c2f4e9502b238"
 )
 ExternalProject_Add(
   bundled_zstd
--- hhvm-4.168.2/third-party/libsodium/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.456241341 +0200
@@ -21,10 +21,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   LIBSODIUM_DOWNLOAD_ARGS
-  SOURCE_URL
-  "https://github.com/jedisct1/libsodium/releases/download/1.0.18-RELEASE/libsodium-1.0.18.tar.gz"
-  SOURCE_HASH
-  "SHA512=17e8638e46d8f6f7d024fe5559eccf2b8baf23e143fadd472a7d29d228b186d86686a5e6920385fe2020729119a5f12f989c3a782afbd05a8db4819bb18666ef"
 )
 
 if (CMAKE_OSX_SYSROOT)
--- hhvm-4.168.2/third-party/brotli/CMakeLists.txt	2023-05-28 20:16:43.000000000 +0200
+++ -	2023-06-01 19:10:40.458519062 +0200
@@ -4,10 +4,6 @@
 include(HPHPFunctions)
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   BROTLI_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/google/brotli/archive/refs/tags/v1.0.9.tar.gz"
-  SOURCE_HASH
-  "SHA256=f9e8d81d0405ba66d181529af42a3354f838c939095ff99930da6aa9cdf6fe46"
   FILENAME_PREFIX "brotli-"
 )
 
--- hhvm-4.168.2/third-party/proxygen/CMakeLists.txt	2023-05-28 20:24:27.000000000 +0200
+++ -	2023-06-01 19:10:40.460795033 +0200
@@ -18,10 +18,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   PROXYGEN_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/facebook/proxygen/releases/download/v2022.07.04.00/proxygen-v2022.07.04.00.tar.gz"
-  SOURCE_HASH
-  "SHA256=4de47545a5beb9f3ac2ccdd62ae9def112b3cc361bb71820b9306a04f4bb40e9"
 )
 
 ExternalProject_Add(
--- hhvm-4.168.2/third-party/wangle/CMakeLists.txt	2023-05-28 20:24:27.000000000 +0200
+++ -	2023-06-01 19:10:40.463064724 +0200
@@ -20,10 +20,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   WANGLE_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/facebook/wangle/releases/download/v2022.07.04.00/wangle-v2022.07.04.00.tar.gz"
-  SOURCE_HASH
-  "SHA256=8c7b538f9e9d84162056d6dc757bea1d0d4c0978889469f10e9d05b1dc4e5a83"
 )
 
 ExternalProject_Add(
--- hhvm-4.168.2/third-party/thrift/CMakeLists.txt	2023-05-28 20:24:27.000000000 +0200
+++ -	2023-06-01 19:10:40.465499515 +0200
@@ -20,10 +20,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   THRIFT_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/facebook/fbthrift/archive/refs/tags/v2022.07.04.00.tar.gz"
-  SOURCE_HASH
-  "SHA256=45e7ffb38655d9b518d28066f4276000a298990c7c32b9460ddb7a37f2af78bd"
   FILENAME_PREFIX
   "fbthrift-"
 )
--- hhvm-4.168.2/third-party/mcrouter/CMakeLists.txt	2023-05-28 20:24:27.000000000 +0200
+++ -	2023-06-01 19:10:40.467849786 +0200
@@ -5,9 +5,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   MCROUTER_DOWNLOAD_ARGS
-  SOURCE_URL "https://github.com/facebook/mcrouter/archive/refs/tags/v2022.07.04.00.tar.gz"
-  SOURCE_HASH "SHA256=7a2a0b44736e896c844c4f8c7697202cdebf7fa42dbb4b84931ee5036a46945c"
-  # The tarball name is just the tag name, which can conflict in the cache
   FILENAME_PREFIX "mcrouter-"
 )
 
--- hhvm-4.168.2/third-party/double-conversion/CMakeLists.txt	2023-05-28 20:16:43.000000000 +0200
+++ -	2023-06-01 19:10:40.470198057 +0200
@@ -1,33 +1,7 @@
 include(ExternalProject)
 include(HPHPFunctions)
 
-SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
-  DOUBLE_CONVERSION_DOWNLOAD_ARGS
-  SOURCE_URL "https://github.com/google/double-conversion/archive/refs/tags/v3.0.1.tar.gz"
-  SOURCE_HASH "SHA256=d400c86417df2980b60dc27ad68249dd124964738916d20cdc9c90b42de86490"
-  # The tarball name is just the tag name, which can conflict in the cache
-  FILENAME_PREFIX "double-conversion-"
-)
-
-ExternalProject_Add(
-  bundled_double-conversion
-  ${DOUBLE_CONVERSION_DOWNLOAD_ARGS}
-  CMAKE_ARGS
-    -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>
-    -DCMAKE_INSTALL_LIBDIR=lib
-    -DCMAKE_INSTALL_INCLUDEDIR=include
-    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
-    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
-    -DCMAKE_OSX_SYSROOT=${CMAKE_OSX_SYSROOT}
-  EXCLUDE_FROM_ALL
-)
-
-option(FORCE_BUNDLED_DOUBLE_CONVERSION "Always use bundled double-conversion" OFF)
-if(FORCE_BUNDLED_DOUBLE_CONVERSION)
-  set(DOUBLE_CONVERSION_FOUND FALSE)
-else()
-  find_package(DoubleConversion)
-endif()
+find_package(DoubleConversion)
 
 add_library(double-conversion INTERFACE)
 if(DOUBLE_CONVERSION_FOUND)
--- hhvm-4.168.2/third-party/timelib/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.472727059 +0200
@@ -6,9 +6,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   TIMELIB_DOWNLOAD_ARGS
-  SOURCE_URL "https://github.com/derickr/timelib/archive/refs/tags/2021.07.tar.gz"
-  SOURCE_HASH "SHA512=7bc56d20360937af10f63960e443cc8bd4d24c5369f697241e54da21465d4512bd16cfa6f0efcf2b847cc19781e1cecf93c9e19a1efa4f1a7012c9fa442eeabe"
-  # Look for timelib-YYYY.MM.tar.gz in download cache, not just YYYY.MM.tar.gz
   FILENAME_PREFIX "timelib-"
 )
 
--- hhvm-4.168.2/third-party/oniguruma/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.474969410 +0200
@@ -28,10 +28,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   ONIG_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/kkos/oniguruma/releases/download/v6.9.5/onig-6.9.5.tar.gz"
-  SOURCE_HASH
-  "SHA512=2bdb24914e7069c6df9ab8a3d0190ddb58440d94b13860cdc36d259062ae0bc2aa85d564a4209ec596fc7ee47b0823d1b817d4f7ffcc3ea60e9870da84491dc1"
 )
 
 ExternalProject_add(
--- hhvm-4.168.2/third-party/fizz/CMakeLists.txt	2023-05-28 20:24:27.000000000 +0200
+++ -	2023-06-01 19:10:40.477204211 +0200
@@ -22,10 +22,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   FIZZ_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/facebookincubator/fizz/releases/download/v2022.07.04.00/fizz-v2022.07.04.00.tar.gz"
-  SOURCE_HASH
-  "SHA256=48941c3726b99aa9b22480ff92cbe3715154df0a4330ad42485b3d7649167b76"
 )
 
 set(
--- hhvm-4.168.2/third-party/fmt/CMakeLists.txt	2023-05-28 20:24:27.000000000 +0200
+++ -	2023-06-01 19:10:40.478716581 +0200
@@ -3,10 +3,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   FMT_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/fmtlib/fmt/releases/download/8.0.0/fmt-8.0.0.zip"
-  SOURCE_HASH
-  "SHA512=70848739642bebf2820d661e7547208445329325a0d8b5919d85f375d683c0f9bef763bc7e9d7823def15100134fd9a126a9e418223b20bf8d567e5084334778"
 )
 
 set(INSTALL_DIR "${CMAKE_CURRENT_BINARY_DIR}/fmt-prefix")
--- hhvm-4.168.2/third-party/rustc/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.480975123 +0200
@@ -32,14 +32,6 @@
 
   SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
     RUST_DOWNLOAD_ARGS
-    Linux_URL
-    "https://static.rust-lang.org/dist/${RUST_NIGHTLY_VERSION}/rust-nightly-x86_64-unknown-linux-gnu.tar.gz"
-    Darwin_URL
-    "https://static.rust-lang.org/dist/${RUST_NIGHTLY_VERSION}/rust-nightly-x86_64-apple-darwin.tar.gz"
-    Linux_HASH
-    "SHA512=de136959121b4117ab31a9ae4c4b3c593d4fcdf9724bd0f62e8a4ab41becccfa4b8e92ebe1460d9be508986888b95b38620bb68b58496db89706760074b9585d"
-    Darwin_HASH
-    "SHA512=77beb1d67233d3954c2709a47c2513762e91e506041bb5ad8d0aad90124cb5a229dfc87e1fb767826f27a31b52520f148c52c2f3a595dac6e09a676c6e660462"
     # The original filename doesn't contain any version information, so add the version information as a prefix to avoid cache collisions when updating later
     FILENAME_PREFIX "rustc-${RUST_NIGHTLY_VERSION}-"
   )
--- hhvm-4.168.2/third-party/lz4/CMakeLists.txt	2023-05-28 20:16:44.000000000 +0200
+++ -	2023-06-01 19:10:40.483215304 +0200
@@ -21,10 +21,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   LZ4_DOWNLOAD_ARGS
-  SOURCE_URL "https://github.com/lz4/lz4/archive/v1.9.2.tar.gz"
-  SOURCE_HASH "SHA256=658ba6191fa44c92280d4aa2c271b0f4fbc0e34d249578dd05e50e76d0e5efcc"
-  # By default, we'd look for v1.9.2.tar.gz in the cache - let's look for
-  # lz4-v1.9.2 instead
   FILENAME_PREFIX "lz4-"
 )
 set(MAKE_ARGS CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} "MOREFLAGS=-fPIC ${ISYSROOT_FLAG}")
--- hhvm-4.168.2/third-party/folly/CMakeLists.txt	2023-05-28 20:24:27.000000000 +0200
+++ -	2023-06-01 19:10:40.485574035 +0200
@@ -3,10 +3,6 @@
 
 SET_HHVM_THIRD_PARTY_SOURCE_ARGS(
   FOLLY_SOURCE_ARGS
-  SOURCE_URL
-  "https://github.com/facebook/folly/releases/download/v2022.07.04.00/folly-v2022.07.04.00.tar.gz"
-  SOURCE_HASH
-  "SHA256=fff7caa4a230ac0b3ee88e383fa9ea1ee2b2f3f7611ae5b18c73a71a40ec0d43"
 )
 
 get_target_property(BOOST_INCLUDE_DIR boost INTERFACE_INCLUDE_DIRECTORIES)
