The SvxLink Server is a general purpose voice services system,
which when connected to a transceiver, can act as both an advanced
repeater system and can also operate on a simplex channel. One could
call it a radio operating system since it sits between the hardware
(transceiver) and the applications (modules) and handle basic system
services as well as input and output.

SvxLink is very extensible and modular. Voice services are implemented
as modules which are isolated from each other. Modules can be
implemented in either C++ or TCL.

The project also includes Qtel, the Qt EchoLink client, is a graphical
application used to access the EchoLink network.

The SvxReflector application, which is meant to be used as a center
point to link SvxLink nodes together, is also included in this build.

This release introduce talkgroups in the SvxReflector. 
That make it possible to use the reflector server for multiple parallel
QSOs and provide a new set of features.  Also multiple CTCSS tones are
now supported.

A SvxLink node can now be configured to use multiple SvxReflector
addresses, that allow for simple redundancy where all nodes will switch
to a backup node if the primary SvxReflector stops responding.

Be careful with configuration files since config variables have
changed in this release. Make sure to move them accordingly.

You can build only svxlink server (no Qtel) by passing QTEL=NO to the
script:
QTEL=NO ./svxlink.SlackBuild

Opus is an optional (and, based on the audio quality, suggested!)
dependency available from slackbuilds.org

You need a "svxlink" user and group:

 # groupadd -g 286 svxlink
 # useradd -u 286 -g svxlink -d /var/spool/svxlink -s /bin/false svxlink

The recommended uid/gid is 286, you may want to check
http://slackbuilds.org/uid_gid.txt for other recommendations.

To run svxlink server you will need the svxlink-sounds package.

You may want to check the rc.svxlink scripts for startup options.
