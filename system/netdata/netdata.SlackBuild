#!/bin/bash

# Slackware build script for netdata

# Copyright 2017-2024 Willy Sudiarto Raharjo <willysr@slackbuilds.org>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=netdata
VERSION=${VERSION:-2.0.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

NETDATA_USER=${NETDATA_USER:-netdata}
NETDATA_UID=${NETDATA_UID:-338}
NETDATA_GROUP=${NETDATA_GROUP:-netdata}
NETDATA_GID=${NETDATA_GID:-338}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

bailout() {
  echo "  You must have a $NETDATA_USER user and $NETDATA_GROUP group to run this script. "
  echo "    # groupadd -g $NETDATA_GID $NETDATA_GROUP "
  echo "    # useradd -u $NETDATA_UID -g $NETDATA_GID -c \"netdata user\" -s /bin/bash $NETDATA_USER "
  exit 1
}

# Bail if user and/or group isn't valid on your system
if ! grep -q "^$NETDATA_USER:" /etc/passwd; then
  bailout
elif ! grep -q "^$NETDATA_GROUP:" /etc/group; then
  bailout
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-v$VERSION
tar xvf $CWD/$PRGNAM-v$VERSION.tar.gz
cd $PRGNAM-v$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# wsr - 20241113
# Somehow abseil-cpp that we have in SBo or current is too new
# So we will use the bundled protobuf in order to build for now
# Let's keep the deps in place just in case they fixed it in the future
mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/ \
    -DENABLE_EXPORTER_PROMETHEUS_REMOTE_WRITE=FALSE \
    -DENABLE_PLUGIN_XENSTAT=FALSE \
    -DENABLE_PLUGIN_EBPF=FALSE \
    -DENABLE_PLUGIN_FREEIPMI=TRUE \
    -DENABLE_PLUGIN_SYSTEMD_JOURNAL=FALSE \
    -DENABLE_LOGS_MANAGEMENT_TESTS=FALSE \
    -DENABLE_PLUGIN_GO=FALSE \
    -DENABLE_ACLK=FALSE \
    -DENABLE_BUNDLED_PROTOBUF=TRUE \
    -DCMAKE_BUILD_TYPE=Release ..
  make
  make install/strip DESTDIR=$PKG
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE *.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/var/lock/subsys/ $PKG/var/cache/netdata $PKG/var/lib/netdata $PKG/var/log/netdata

# set permission
chown -R $NETDATA_USER:$NETDATA_GROUP $PKG/var/lib/netdata
chown -R $NETDATA_USER:$NETDATA_GROUP $PKG/var/log/netdata
chown -R $NETDATA_USER:$NETDATA_GROUP $PKG/var/cache/netdata
chown -R $NETDATA_USER:$NETDATA_GROUP $PKG/usr/share/netdata/web
chown -R $NETDATA_USER:$NETDATA_GROUP $PKG/etc/netdata

mkdir -p $PKG/etc/rc.d/
install -m 0644 $CWD/rc.netdata $PKG/etc/rc.d/

# handle all conf files
cp system/netdata.conf $PKG/etc/netdata/netdata.conf.new
cp system/netdata-updater.conf $PKG/etc/netdata/netdata-updater.conf.new

# since 1.45.x, all files will be kept in /usr/lib
for L in $( ls $PKG/usr/lib/netdata/conf.d/*.conf )
do
mv $L $L.new
done

for L in $( ls $PKG/usr/lib/netdata/conf.d/python.d/*.conf )
do
mv $L $L.new
done

for L in $( ls $PKG/usr/lib/netdata/conf.d/charts.d/*.conf )
do
mv $L $L.new
done

for L in $( ls $PKG/usr/lib/netdata/conf.d/health.d/*.conf )
do
mv $L $L.new
done

for L in $( ls $PKG/usr/lib/netdata/conf.d/statsd.d/*.conf )
do
mv $L $L.new
done

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
