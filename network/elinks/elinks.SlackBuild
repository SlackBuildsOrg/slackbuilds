#!/bin/bash

# Slackware build script for elinks
# Copyright 2014 David Woodfall <dave@slackbuilds.org>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# 20241211 bkw: fix for new lua (-DLUA_COMPAT_5_3).

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=elinks
VERSION=${VERSION:-20170723_f86be65}
COMMIT=${VERSION#*_}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# A much more peaceful build
SLKCFLAGS="$SLKCFLAGS -fno-strict-aliasing -Wno-pointer-sign"

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$COMMIT
tar xvf $CWD/$COMMIT.tar.?z || tar xvf $CWD/$PRGNAM-$COMMIT.tar.?z
cd $PRGNAM-$COMMIT
chown -R root:root .
find -L . \
  \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# fix documentation generation on 15.0.
# xmlto needs --skip-validation or it fails.
sed -i 's/$(XMLTO) -o/$(XMLTO) --skip-validation -o/' doc/Makefile

for patch in $CWD/patches/*; do
  patch --verbose -p1 < $patch
done

# patches for no suspend (^Z) and -no-connect by default
# courtesy of B. Watson.
[ "${NO_SUSPEND:-no}" = "yes" ] &&
  patch --verbose -p1 -i $CWD/option-patches/0010-*
[ "${NO_CONNECT:-no}" = "yes" ] &&
  patch --verbose -p1 -i $CWD/option-patches/0020-*

# System
[ "${FASTMEM:-no}"    = "yes" ] && fastmem="--enable-fastmem"
[ "${CGI:-no}"        = "yes" ] && cgi="--enable-cgi"
[ "${CCOMBINING:-no}" = "yes" ] && combinging="--enable-combining"
[ "${UTF8:-yes}"      = "no"  ] && utf8="--disable-utf-8"
[ "${IPV6:-yes}"      = "no"  ] && ipv6="--disable-ipv6"
[ "${HTMLHL:-no}"     = "yes" ] && htmlhl="--enable-html-highlight"
[ "${LZMA:-no}"       = "yes" ] && lzma="--with-lzma"

# UI
[ "${MOUSE:-yes}"     = "no"  ] && mouse="--disable-mouse"
[ "${GPM:-yes}"       = "no"  ] && gpm="--without-gpm"
[ "${EXMODE:-no}"     = "yes" ] && exmode="--enable-exmode"

# Colours
[ "${COLS88:-no}"     = "yes" ] && cols88="--enable-88-colors"
[ "${COLS256:-no}"    = "yes" ] && cols256="--enable-256-colors"
[ "${COLSTRUE:-no}"   = "yes" ] && colstrue="--enable-true-colors"

# Scripting
[ "${GUILE:-no}"      = "yes" ] && guile="--with-guile"
[ "${PERL:-no}"       = "yes" ] && perl="--with-perl"
[ "${PYTHON:-no}"     = "yes" ] && python="--with-python"
[ "${LUA:-yes}"       = "no"  ] && lua="--without-lua"
[ "${ECMA:-yes}"      = "no"  ] && ecma="--disable-sm-scripting"

# Protocols
[ "${BITTORRENT:-no}" = "yes" ] && bittorrent="--enable-bittorrent"
[ "${DATA:-yes}"      = "no"  ] && data="--disable-data"
[ "${FSP:-no}"        = "yes" ] && fsp="--enable-fsp"
[ "${FTP:-yes}"       = "no"  ] && ftp="--disable-ftp"
[ "${FINGER:-no}"     = "yes" ] && finger="--enable-finger"
[ "${GOPHER:-no}"     = "yes" ] && gopher="--enable-gopher"
[ "${NNTP:-no}"       = "yes" ] && nntp="--enable-nntp"
[ "${SMB:-no}"        = "yes" ] && smb="--enable-smb"

# quiet some more warnings
sed "s,^aclocal,& -Wnone," -i autogen.sh

./autogen.sh
CFLAGS="$SLKCFLAGS -L/usr/lib$LIBDIRSUFFIX -DLUA_COMPAT_5_3" \
  ./configure \
  --prefix=/usr \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --htmldir=/usr/doc/$PRGNAM-$VERSION/html \
  $fastmem \
  $cgi \
  $combining \
  $utf8 \
  $ipv6 \
  $htmlhl \
  $lzma \
  $mouse \
  $gpm \
  $exmode \
  $cols88 \
  $cols256 \
  $colstrue \
  $guile \
  $perl \
  $python \
  $lua \
  $ecma \
  $bittorrent \
  $data \
  $fsp \
  $ftp \
  $finger \
  $gopher \
  $nntp \
  $smb \
  --build=$ARCH-slackware-linux

make
# html doesn't install so we copy it later
make -C doc html
make install DESTDIR=$PKG

strip --strip-unneeded $PKG/usr/bin/$PRGNAM
gzip -9 $PKG/usr/man/man?/*.?

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION

cp -a \
  AUTHORS BUGS COPYING NEWS README SITES THANKS TODO ChangeLog contrib \
  doc/*txt doc/manual.html-chunked \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# don't need these
find $PKG \( -name ".gitignore" -o -name "manual.proc" \) -delete

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
