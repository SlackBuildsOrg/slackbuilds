#!/bin/bash

# Slackware build script for gnome-shell

# Copyright 2022 Bob Funk Winnipeg, Canada
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# NOTE: This SlackBuild also builds gsettings-desktop-schemas-41.0 and packages
# it along with gnome-shell. This allows gnome-shell-41 to work on 
# Slackware-15.0, which comes with gsettings-desktop-schemas-40.0.
# TO make this work we patch gnome-shell to allow it to build against 
# Slackware's gsettings-desktop-schemas-40.0. Then we install the 41.0 schemas
# in a alternate location, compile them, and show gnome-shell where they are 
# using XDG_DATA_DIRS at runtime with a wrapper script.
#
# Modified May 10, 2024 - Disable building tests to drop mutter's
# xvfb-run dependency.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=gnome-shell
VERSION=${VERSION:-41.9}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION

# Variables for gsettings-desktop-schemas build:
GDS_NAM="gsettings-desktop-schemas"
GDS_VER="41.0"
GDS_DATADIR="/usr/share/$PRGNAM/$GDS_NAM"
CLEANUP=cleanup

# Build gsettings-desktop-schemas-41.0:
rm -rf $GDS_NAM-$GDS_VER
tar xvf $CWD/$GDS_NAM-$GDS_VER.tar.xz
cd $GDS_NAM-$GDS_VER
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir build
cd build
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  meson .. \
    --buildtype=release \
    --infodir=info \
    --includedir=$CLEANUP \
    --libdir=$CLEANUP \
    --datadir=$GDS_DATADIR \
    --localedir=$CLEANUP \
    --localstatedir=/var \
    --mandir=man \
    --prefix=/usr \
    --sysconfdir=/etc \
    -Dstrip=true
  "${NINJA:=ninja}"
  DESTDIR=$PKG $NINJA install
cd ../..

# Remove everything from gsettings-desktop-schemas except the gschema files:
rm -rf $PKG/usr/$CLEANUP $PKG$GDS_DATADIR/{GConf,gir-1.0,pkgconfig}

# Build gnome-shell:
tar xvf $CWD/$PRGNAM-$VERSION.tar.?z
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . -prune -name 'subprojects/gvc/.gitlab-ci' \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Patch meson.build to allow gsettings-desktop-schemas-40.0:
patch -Np1 -i $CWD/0001-build-with-gsettings-desktop-schemas-40.patch

mkdir build
cd build
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  meson .. \
    --buildtype=release \
    --infodir=/usr/info \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --localstatedir=/var \
    --libexecdir=/usr/libexec \
    --mandir=/usr/man \
    --prefix=/usr \
    --sysconfdir=/etc \
    -Dstrip=true \
    -Dsystemd=false \
    -Dtests=false
  "${NINJA:=ninja}"
  DESTDIR=$PKG $NINJA install
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Install the gnome-shell wrapper script:
mv $PKG/usr/bin/{gnome-shell,gnome-shell-bin}
cat $CWD/gnome-shell.wrap > $PKG/usr/bin/gnome-shell

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  COPYING  HACKING.md  NEWS  README.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/douninst.sh > $PKG/install/douninst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
