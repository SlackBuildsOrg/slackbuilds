Smarty is a template engine for PHP. More specifically, it facilitates
a manageable way to separate application logic and content from
its presentation. This is best described in a situation where the
application programmer and the template designer play different roles,
or in most cases are not the same person.

Some of Smarty's features:
* It is extremely fast.
* It is efficient since the PHP parser does the dirty work.
* No template parsing overhead, only compiles once.
* It is smart about recompiling only the template files that have
  changed.
* You can easily create your own custom functions and variable
  modifiers, so the template language is extremely extensible.
* Configurable template {delimiter} tag syntax, so you can use
  {$foo}, {{$foo}}, <!--{$foo}-->, etc.
* The {if}..{elseif}..{else}..{/if} constructs are passed to the PHP
  parser, so the {if...} expression syntax can be as simple or as
  complex an evaluation as you like.
* Allows unlimited nesting of sections, if's etc.
* Built-in caching support
* Arbitrary template sources
* Custom cache handling functions
* Template Inheritance for easy management of template content.
* Plugin architecture

See the Documentation at http://www.smarty.net/documentation for
instructions on how to configure PHP & Smarty to work together.

Smarty gets installed under /usr/lib/php/Smarty, so to use it, in
standard configuration it should be enough to use the following PHP
code: require_once( 'Smarty/Smarty.class.php' );
