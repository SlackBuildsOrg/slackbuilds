#!/bin/bash

# Slackware build script for desmume

# Copyright 2009-2015 Larry Hajali <email removed>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# 20230605 bkw:
# - new maintainer.
# - update for v0.9.13.
# - fix typo in .desktop file.
# - fix doinst.sh.
# - remove zziplib from REQUIRES (desmume doesn't use it at all).
# - remove gtkglext from REQUIRES (desmume doesn't use it, even though
#   the README.LIN claims it does).
# - remove mention of optional lua dep in README, because it's not real
#   (see src/frontend/posix/meson.build; it's commented out).

# Notes:

# agg and soundtouch are actually optional. leave them in REQUIRES for
# now because I'm not feeling motivated enough to test what happens if
# you build without them.

# git repo here: https://github.com/TASEmulators/desmume
# check for updates: https://github.com/TASEmulators/desmume/tags
# game ROMs here: https://vimm.net/vault/DS (ad-ridden)

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=desmume
VERSION=${VERSION:-0.9.13}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
else
  SLKCFLAGS="-O2"
fi

set -e

TARVER="release_$( echo $VERSION | sed 's,\.,_,g' )"

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$TARVER
tar xvf $CWD/$PRGNAM-$TARVER.tar.gz
cd $PRGNAM-$TARVER
chown -R root:root .
find -L .  -perm /111 -a \! -perm 755 -a -exec chmod 755 {} + -o \
        \! -perm /111 -a \! -perm 644 -a -exec chmod 644 {} +

cd $PRGNAM
mkdir -p src/frontend/posix/build
cd src/frontend/posix/build
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  meson .. \
    --buildtype=release \
    --prefix=/usr \
    --bindir=/usr/games \
    --mandir=/usr/man \
    --optimization=2 \
    --strip \
    -Dc_args='-minline-all-stringops -D_FORTIFY_SOURCE=2' \
    -Db_pie=true \
    -Dopenal=true \
    -Dwifi=true

  "${NINJA:=ninja}"
  DESTDIR=$PKG $NINJA install
cd -

# 20230605 bkw: this would drive me insane if I didn't fix it:
sed -i 's,Nintento,Nintendo,g' $PKG/usr/share/applications/*.desktop

gzip -9 $PKG/usr/man/man*/*

PKGDOC=$PKG/usr/doc/$PRGNAM-$VERSION
mkdir -p $PKGDOC
cp -a AUTHORS ChangeLog COPYING README README.LIN doc/ds*.txt $PKGDOC
cat $CWD/$PRGNAM.SlackBuild > $PKGDOC/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
