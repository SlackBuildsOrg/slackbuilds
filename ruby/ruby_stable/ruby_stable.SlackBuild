#!/bin/bash

# Slackware build script for ruby

# Written by Riza Dindir
# Revision date 2025/09/13

# Set initial variables
CWD=$(pwd)
if [ "${TMP}" = "" ]; then
  TMP=/tmp/SBo
fi
OUTPUT=${OUTPUT:-/tmp}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

# The version which appears in the application's filename
VERSION=${VERSION:-3.4.6}

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
 case "$( uname -m )" in
   i?86) ARCH=i586 ;;
   arm*) ARCH=arm ;;
      *) ARCH=$( uname -m ) ;;
 esac
fi

# First digit is the build number, which specifies how many times it has been built.	
BUILD=${BUILD:-1}

# The application's name
APP=ruby
PRGNAM=ruby_stable

# The installation directory of the package (where its actual directory
# structure will be created) 
PKG=$TMP/package-$APP

# Extract Sources

# Delete the leftover directories if they exist (due to a previous build)
# and (re)create the packaging directory
rm -rf $PKG 
mkdir -p $TMP $PKG $OUTPUT
rm -rf $TMP/$APP-$VERSION

# Change to the TMP directory
cd $TMP || exit 1

# Extract the application source in TMP
# Note: if your application comes as a tar.bz2, you need tar -jxvf
tar -zxvf $CWD/$APP-$VERSION.tar.gz || exit 1

# Change to the application source directory
cd $APP-$VERSION || exit 1

# Change ownership and permissions if necessary
# This may not be needed in some source tarballs, but it never hurts
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Configure and compile the sources
./configure --prefix /opt/${APP}-${VERSION}
make || exit
make install DESTDIR=${PKG} || exit

# Strip some libraries and binaries
( cd $PKG
   find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
   find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

# Compress man pages if they exist
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
  find . -type f -exec gzip -9 {} \;
  for i in $(find . -type l) ; do ln -s $(readlink $i).gz $i.gz ; rm $i ; done
  ) 
fi

# Compress info pages if they exist (and remove the dir file)
if [ -d $PKG/usr/info ]; then
  gzip -9 $PKG/usr/info/*.info
  rm -f $PKG/usr/info/dir
fi

# Build the package
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
