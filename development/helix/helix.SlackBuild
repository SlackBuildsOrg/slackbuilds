#!/bin/bash

# Slackware build script for helix

# Copyright 2025 Vladislav 'fsLeg' Borisov, Moscow, Russia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=helix
VERSION=${VERSION:-25.07.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac

  if [ "$ARCH" = "i586" ]; then
    if rustc -Vv | grep host | grep i686 > /dev/null ; then
      ARCH=i686
    fi
  fi
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "aarch64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG $TMP/$PRGNAM-$VERSION
mkdir -p $TMP/$PRGNAM-$VERSION $PKG $OUTPUT
cd $TMP/$PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION-source.tar.xz
tar xvf $CWD/$PRGNAM-$VERSION-vendored-sources.tar.xz -C ../
chown -R root:root .

# Grammar sources are bundled, no need to fetch them again
patch -p1 < $CWD/disable-grammar-fetching.patch

export PATH="/opt/rust/bin:$PATH"
if [ -z "$LD_LIBRARY_PATH" ]; then
  export LD_LIBRARY_PATH="/opt/rust/lib$LIBDIRSUFFIX"
else
  export LD_LIBRARY_PATH="/opt/rust/lib$LIBDIRSUFFIX:$LD_LIBRARY_PATH"
fi

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
RUSTFLAGS="-C target-cpu=native" \
CARGO_HOME=".cargo" \
HELIX_DEFAULT_RUNTIME=/usr/lib$LIBDIRSUFFIX/$PRGNAM \
cargo build --frozen --profile opt

mkdir -p $PKG/usr/bin \
         $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM \
         $PKG/usr/share/bash-completion/completions \
         $PKG/usr/share/fish/vendor_completions.d \
         $PKG/usr/share/zsh/site-functions \
         $PKG/usr/share/applications
install -Dm 755 -t $PKG/usr/bin target/opt/hx
cp -R runtime/queries $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/
cp -R runtime/themes $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/
mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/grammars
find runtime/grammars -name "*.so" -type f -exec \
  install -Dm 755 -t $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM/grammars {} \;
install -Dm 644 -t $PKG/usr/lib$LIBDIRSUFFIX/$PRGNAM runtime/tutor
install -Dm 644 contrib/completion/hx.bash $PKG/usr/share/bash-completion/completions/$PRGNAM
install -Dm 644 contrib/completion/hx.fish $PKG/usr/share/fish/vendor_completions.d/$PRGNAM.fish
install -Dm 644 contrib/completion/hx.zsh $PKG/usr/share/zsh/site-functions/_$PRGNAM
install -Dm 644 contrib/Helix.desktop $PKG/usr/share/applications/$PRGNAM.desktop
for geometry in 16x16 24x24 32x32 48x48 64x64 96x96 128x128 256x256; do
  mkdir -p $PKG/usr/share/icons/hicolor/$geometry/apps
  magick contrib/helix.png -resize $geometry $PKG/usr/share/icons/hicolor/$geometry/apps/$PRGNAM.png
done

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  LICENSE README.md CHANGELOG.md docs/*.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

if [ "${DOCS:-no}" != "no" ]; then
  mdbook build --dest-dir $PKG/usr/doc/$PRGNAM-$VERSION/html book
  rm -rf $PKG/usr/doc/$PRGNAM-$VERSION/html/{CNAME,404.html,.nojekyll,generated}
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
