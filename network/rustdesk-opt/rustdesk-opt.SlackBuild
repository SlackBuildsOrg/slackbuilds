#!/bin/bash

# Slackware build script for rustdesk-opt

# Copyright 2024 Olivier Brouckaert <olivier.b@i-services.be>, Brussels, Belgium
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=rustdesk-opt
SRCNAM=rustdesk
VERSION=${VERSION:-1.3.8}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  ARCH=$( uname -m )
fi

if [ "$ARCH" != "x86_64" ]; then
  echo "This package works only on x86_64 architecture."
  exit 1
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

LIBDIRSUFFIX="64"

set -e

if [ ! -e $CWD/vcpkg-2023.04.15.tar.gz ]; then
  echo "File vcpkg-2023.04.15.tar.gz not found in $CWD"
  exit 1
fi

if [ ! -e $CWD/$SRCNAM-$VERSION.tar.gz ]; then
  echo "File $SRCNAM-$VERSION.tar.gz not found in $CWD"
  exit 1
fi

if [ ! -e $CWD/libsciter-gtk.so ]; then
  echo "File libsciter-gtk.so not found in $CWD"
  exit 1
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

# vcpkg

rm -rf vcpkg-2023.04.15
tar -xvzf $CWD/vcpkg-2023.04.15.tar.gz

if [ -e $CWD/vcpkg-2023.04.15-deps.tar.gz ] && [ -e $CWD/vcpkg-glibc ]; then
  cd vcpkg-2023.04.15
  touch vcpkg.disable-metrics
  tar -xvzf $CWD/vcpkg-2023.04.15-deps.tar.gz
  cp -a $CWD/vcpkg-glibc vcpkg
  chmod +x vcpkg
  cd ..

  VCPKG_DL="--no-downloads"
else
  ./vcpkg-2023.04.15/bootstrap-vcpkg.sh --disableMetrics

  VCPKG_DL=""
fi

export VCPKG_ROOT=$TMP/vcpkg-2023.04.15
./vcpkg-2023.04.15/vcpkg --disable-metrics $VCPKG_DL install libvpx libyuv opus aom

# rustdesk

export PATH="/opt/rust/bin:$PATH"

if [ -z "$LD_LIBRARY_PATH" ]; then
  export LD_LIBRARY_PATH="/opt/rust/lib$LIBDIRSUFFIX"
else
  export LD_LIBRARY_PATH="/opt/rust/lib$LIBDIRSUFFIX:$LD_LIBRARY_PATH"
fi

rm -rf $SRCNAM-$VERSION
tar -xvzf $CWD/$SRCNAM-$VERSION.tar.gz
cd $SRCNAM-$VERSION
mkdir -p target/release
cp $CWD/libsciter-gtk.so target/release/
chmod 755 target/release/libsciter-gtk.so

if [ -e $CWD/$SRCNAM-$VERSION-deps.tar.gz ]; then
  tar -xvzf $CWD/$SRCNAM-$VERSION-deps.tar.gz
elif [ -e .gitmodules ]; then
  cd libs
  for url in `cat ../.gitmodules | grep "url =" | sed "s/url =//"`
  do
    git clone $url
  done
  cd ..
fi

export CARGO_HOME=$TMP/$SRCNAM-$VERSION/.cargo

VCPKG_ROOT=$VCPKG_ROOT cargo build --release

mkdir -p $PKG/opt/rustdesk
mkdir -p $PKG/usr/bin
mkdir -p $PKG/usr/share/applications
mkdir -p $PKG/usr/share/icons/hicolor/{32x32,64x64,128x128,256x256,1024x1024}/apps

cp ./res/rustdesk.desktop $PKG/usr/share/applications/
sed -i 's/Comment=Remote Desktop/Comment=Connect to remote machines/' $PKG/usr/share/applications/rustdesk.desktop

cp ./res/32x32.png $PKG/usr/share/icons/hicolor/32x32/apps/rustdesk.png
cp ./res/64x64.png $PKG/usr/share/icons/hicolor/64x64/apps/rustdesk.png
cp ./res/128x128.png $PKG/usr/share/icons/hicolor/128x128/apps/rustdesk.png
cp $CWD/256x256.png $PKG/usr/share/icons/hicolor/256x256/apps/rustdesk.png
cp ./res/icon.png $PKG/usr/share/icons/hicolor/1024x1024/apps/rustdesk.png

cp -r ./{libs,src,flutter} $PKG/opt/rustdesk/
rmdir $PKG/opt/rustdesk/libs/hbb_common/.git/{refs/tags,objects/info,branches}
cp ./target/release/{*.so,naming,rustdesk,service} $PKG/opt/rustdesk/

cat << EOF > $PKG/usr/bin/rustdesk
#!/bin/bash

if [ -z \$1 ]; then
   params=""
else
   params=\$1
fi

if [ -d /opt/rustdesk ]; then
   cd /opt/rustdesk
   export NO_AT_BRIDGE=1
   ./rustdesk \$params
fi
EOF

chmod +x $PKG/usr/bin/rustdesk

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION

cp -r LICENCE README.md docs $PKG/usr/doc/$PRGNAM-$VERSION/

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG

/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
