#!/bin/bash

# Slackware build script for HHVM

# Copyright 2015-2023 Eugene Wissner, Dachau, Germany
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=hhvm
VERSION=${VERSION:-4.168.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

OPAM_STAMP="1d2e919"
CARGO_BUILD="3"
FB_VERSION="2022.07.04.00"

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  echo "$ARCH is not supported."
  exit 1
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar Jxvf $CWD/$PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION

mkdir -p hphp/hack/facebook hphp/hack/_build/opam
tar Jxvf $CWD/hack-switch-$OPAM_STAMP.tar.xz -C hphp/hack/_build/opam
tar Jxvf $CWD/cargo-home-$CARGO_BUILD.tar.xz -C hphp/hack/_build

install -m 0755 -D $CWD/opam-2.1.0-x86_64-linux \
  third-party/opam/opamDownload-prefix/src/opam-2.1.0-x86_64-linux

install -m 0644 -D $CWD/fmt-8.0.0.zip third-party/fmt/bundled_fmt-prefix/src/fmt-8.0.0.zip
unzip $CWD/fmt-8.0.0.zip -d third-party/fmt/bundled_fmt-prefix/src
mv third-party/fmt/bundled_fmt-prefix/src/fmt-8.0.0 third-party/fmt/bundled_fmt-prefix/src/bundled_fmt

mkdir -p third-party/re2/bundled_re2-prefix/src/bundled_re2
install -m 0644 -D $CWD/re2-2021-11-01.tar.gz third-party/re2/bundled_re2-prefix/src/re2-2021-11-01.tar.gz
tar zxvf $CWD/re2-2021-11-01.tar.gz \
  -C third-party/re2/bundled_re2-prefix/src/bundled_re2 \
  --strip-components=1

mkdir -p third-party/brotli/bundled_brotli-prefix/src/bundled_brotli
install -m 0644 -D $CWD/brotli-v1.0.9.tar.gz third-party/brotli/bundled_brotli-prefix/src/brotli-v1.0.9.tar.gz
tar zxvf $CWD/brotli-v1.0.9.tar.gz \
  -C third-party/brotli/bundled_brotli-prefix/src/bundled_brotli \
  --strip-components=1

mkdir -p third-party/rustc/bundled_rust-prefix/src/bundled_rust
install -m 0644 -D $CWD/rust-nightly-x86_64-unknown-linux-gnu.tar.gz \
  third-party/rustc/bundled_rust-prefix/src/rust-nightly-x86_64-unknown-linux-gnu.tar.gz
tar zxvf $CWD/rust-nightly-x86_64-unknown-linux-gnu.tar.gz \
  -C third-party/rustc/bundled_rust-prefix/src/bundled_rust \
  --strip-components=1

mkdir -p third-party/proxygen/bundled_proxygen-prefix/src/bundled_proxygen
install -m 0644 -D $CWD/proxygen-v${FB_VERSION}.tar.gz \
  third-party/proxygen/bundled_proxygen-prefix/src/proxygen-v${FB_VERSION}.tar.gz
tar zxvf $CWD/proxygen-v${FB_VERSION}.tar.gz \
  -C third-party/proxygen/bundled_proxygen-prefix/src/bundled_proxygen

mkdir -p third-party/folly/bundled_folly-prefix/src/bundled_folly
install -m 0644 -D $CWD/folly-v${FB_VERSION}.tar.gz \
  third-party/folly/bundled_folly-prefix/src/folly-v${FB_VERSION}.tar.gz
tar zxvf $CWD/folly-v${FB_VERSION}.tar.gz \
  -C third-party/folly/bundled_folly-prefix/src/bundled_folly

mkdir -p third-party/wangle/bundled_wangle-prefix/src/bundled_wangle
install -m 0644 -D $CWD/wangle-v${FB_VERSION}.tar.gz \
  third-party/wangle/bundled_wangle-prefix/src/wangle-v${FB_VERSION}.tar.gz
tar -zxvf $CWD/wangle-v${FB_VERSION}.tar.gz \
  -C third-party/wangle/bundled_wangle-prefix/src/bundled_wangle

mkdir -p third-party/thrift/bundled_thrift-prefix/src/bundled_thrift
install -m 0644 -D $CWD/fbthrift-v${FB_VERSION}.tar.gz \
  third-party/thrift/bundled_thrift-prefix/src/fbthrift-v${FB_VERSION}.tar.gz
tar -zxvf $CWD/fbthrift-v${FB_VERSION}.tar.gz \
  -C third-party/thrift/bundled_thrift-prefix/src/bundled_thrift \
  --strip-components=1

mkdir -p third-party/mcrouter/bundled_mcrouter-prefix/src/bundled_mcrouter
install -m 0644 -D $CWD/mcrouter-v${FB_VERSION}.tar.gz \
  third-party/mcrouter/bundled_mcrouter-prefix/src/mcrouter-v${FB_VERSION}.tar.gz
tar -zxvf $CWD/mcrouter-v${FB_VERSION}.tar.gz \
  -C third-party/mcrouter/bundled_mcrouter-prefix/src/bundled_mcrouter \
  --strip-components=1

mkdir -p third-party/timelib/bundled_timelib-prefix/src/bundled_timelib
install -m 0644 -D $CWD/timelib-2021.07.tar.gz third-party/timelib/bundled_timelib-prefix/src/timelib-2021.07.tar.gz
tar -zxvf $CWD/timelib-2021.07.tar.gz \
  -C third-party/timelib/bundled_timelib-prefix/src/bundled_timelib \
  --strip-components=1

mkdir -p third-party/fizz/bundled_fizz-prefix/src/bundled_fizz
install -m 0644 -D $CWD/fizz-v${FB_VERSION}.tar.gz \
  third-party/fizz/bundled_fizz-prefix/src/fizz-v${FB_VERSION}.tar.gz
tar -zxvf $CWD/fizz-v${FB_VERSION}.tar.gz \
  -C third-party/fizz/bundled_fizz-prefix/src/bundled_fizz

# The working directory is hphp/hack.
cat << EOF > hphp/hack/facebook/fetch_opam2_repo_hack.sh
!/bin/sh
cp $CWD/index-$OPAM_STAMP.tar.gz facebook/
echo facebook/index-$OPAM_STAMP
EOF
chmod 0755 hphp/hack/facebook/fetch_opam2_repo_hack.sh

patch -p1 --verbose -i $CWD/patches/0001-liburing.patch
patch -p1 --verbose -i $CWD/patches/0002-download.patch
patch -p1 --verbose -i $CWD/patches/0003-iquote.patch

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

export CMAKE_PREFIX_PATH=`pwd`
cmake \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_STANDARD=17 \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_INSTALL_LIBDIR=lib${LIBDIRSUFFIX} \
  -DENABLE_MCROUTER=true \
  -DENABLE_EXTENSION_IMAGICK=false \
  -DNON_DISTRIBUTABLE_BUILD=true \
  -DENABLE_LD_GOLD=true \
  -DUSE_JEMALLOC=true \
  -DUSE_BUNDLED_TZDATA=OFF \
  -DFORCE_BUNDLED_LZ4=OFF \
  -DCAN_USE_SYSTEM_ZSTD=ON \
  -DMYSQL_UNIX_SOCK_ADDR=/var/run/mysqld/mysqld.sock \
  -DCMAKE_BUILD_TYPE=Release .
make || make -j1
make install DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/man
mv hphp/doc/man $PKG/usr/man/man1
find $PKG/usr/man -type f -exec gzip -9 {} \;

install -m 644 -D $CWD/etc/rc.hhvm $PKG/etc/rc.d/rc.hhvm.new
install -m 644 -D $CWD/etc/server.ini $PKG/etc/hhvm/server.ini.new
install -m 644 -D $CWD/etc/php.ini $PKG/etc/hhvm/php.ini.new

mkdir -p $PKG/var/log/hhvm $PKG/usr/lib64/hhvm/extensions

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a *.md LICENSE* hphp/doc/* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
