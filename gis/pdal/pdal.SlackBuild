#!/bin/bash

# Slackware build script for pdal

# Copyright 2023-2024 Giancarlo Dessi, Cagliari, IT
# Copyright 2013-2021 Benjamin Trigona-Harany <slackbuilds@jaxartes.net>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=pdal
SRCNAM=PDAL
VERSION=${VERSION:-2.7.2}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

# *************************************************************************

# Build of these plugin is enabled by default since they require netcdf and hdf5
BUILDICEBRIDGE="-DBUILD_PLUGIN_ICEBRIDGE=ON" ; \
          [ "${ICEBRIDGE:-yes}" = "no" ] && BUILDICEBRIDGE=""
BUILDHDF="-DBUILD_PLUGIN_HDF=ON" ; \
          [ "${HDF:-yes}" = "no" ] && BUILDHDF=""

# Build of these is enabled by default if their additional optional deps are installed
if [ "${OSG:-yes}" = "yes" ]; then
 BUILDOSG="" ; [ -x /usr/bin/osgversion ] && BUILDOSG="-DBUILD_PLUGIN_OPENSCENEGRAPH=ON"
fi
if [ "${E57:-yes}" = "yes" ]; then
 BUILDE57="" ; [ -d /usr/include/xercesc ] && BUILDE57="-DBUILD_PLUGIN_E57=ON"
fi
if [ "${DRACO:-yes}" = "yes" ]; then
 BUILDDRACO="" ; [ -x /usr/bin/draco_decoder-1.5.* ] && BUILDDRACO="-DBUILD_PLUGIN_DRACO=ON"
fi

# *************************************************************************

# Users that have a standard installation of proprietary MatLAB would enable 
# the build of Matlab plugin. This is disabled by default
BUILDMATLAB="" ; [ "${MATLAB:-no}" = "yes" ] && \
                  BUILDMATLAB="-DBUILD_PLUGIN_MATLAB=ON"

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tar.gz
cd $SRCNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir -p build
cd build
  cmake \
    -G "Unix Makefiles" \
    -DCMAKE_C_FLAGS="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
    -DCMAKE_BUILD_TYPE="Release" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=lib$LIBDIRSUFFIX \
    -DBUILD_PGPOINTCLOUD_TESTS=OFF \
    -DBUILD_PLUGIN_PGPOINTCLOUD=ON \
    -DWITH_COMPLETION=ON \
    -DWITH_BACKTRACE=OFF \
    -DWITH_TESTS=FALSE \
    $BUILDICEBRIDGE \
    $BUILDE57 \
    $BUILDDRACO \
    $BUILDOSG \
    $BUILDHDF \
    $BUILDMATLAB \
    ..
  make
  make install DESTDIR=$PKG
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | \
  grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
  
# Remove empty directories and fix permissions (issues found by sbopkglint) 
rmdir $PKG/usr/include/pdal/filters/private/csf
rmdir $PKG/usr/include/pdal/filters/private/miniball
chmod 644 $PKG/usr/include/pdal/*.hpp
chmod 644 $PKG/usr/include/pdal/*/*.hpp
chmod 644 $PKG/usr/include/pdal/*/*/*.hpp
chmod 644 $PKG/usr/include/pdal/*/*/*/*.hpp

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  AUTHORS.txt CITATION LICENSE.txt README.md RELEASENOTES.txt \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
