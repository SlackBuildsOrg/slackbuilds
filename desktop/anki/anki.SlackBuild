#!/bin/bash

# Slackware build script for anki

# Written by Giuseppe Scalzi <giuseppe[at]osgate[dot]org>
# Updated for new Anki build scheme by Caterino Tommaso, T.O.P. (2025)
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=anki
VERSION=${VERSION:-25.02.7}
PYVERSION=$(python -c 'import sys; print(".".join(map(str, sys.version_info[0:2])))')
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

# Find ARCH
if [ -z "$ARCH" ]; then
  ARCH=$( uname -m )
fi

# Bail out if not x86_64
if [ "$ARCH" != x86_64 ]; then
  echo "Architecture $ARCH is not supported" >&2
  exit 1
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
PREFIX=${PREFIX:-$PKG/opt/anki}

set -e # exit on errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar --zstd -xvf $CWD/$PRGNAM-$VERSION-linux-qt6.tar.zst
cd $PRGNAM-$VERSION-linux-qt6
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# from istall.sh script:
mkdir -p $PREFIX
cp -av --no-preserve=owner,context -- * $PREFIX
mkdir -p $PKG/usr/bin
ln -sf /opt/anki/anki $PKG/usr/bin/anki

install -vD -m 0644 anki.{png,xpm} -t $PKG/usr/share/pixmaps
install -vD -m 0644 anki.desktop -t $PKG/usr/share/applications
install -vD -m 0644 anki.1 -t $PKG/usr/man/man1
rm $PREFIX/anki.{png,xpm} $PREFIX/anki.desktop $PREFIX/anki.1

# strip binaries and rpaths
find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : \
  | xargs -d $'\n' sh -c \
  'for arg do xargs strip --strip-unneeded $arg; chmod +x $arg; done' _ \
  2> /dev/null || true

# gzip man pages
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
mv README.md $PKG/usr/doc/$PRGNAM-$VERSION
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
