#!/bin/bash

# Slackware build script for libjxl

# Copyright 2022-2024 Vijay Marcel
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#-----------------------------Changelog---------------------------------------------------#

# 25/09/2022: Added to slackbuilds.org

# 16/05/2023: Updated to commit version 8ec9ed1.

# 24/05/2023: Resubmitted to SBo.Optional dependencies are qt6,Sphinx and
# 	    sphinx-rtd-theme.

# 26/05/2023: Resubmitted to SBo Mentioned why the Optional dependencies is needed.

# 29/11/2023: Upgraded to version 0.8.2 Removed support for JNI java wrapper and
#             also removed zulu-openjdk8 as dependency since the SlackBuild fails
#             to build.Thanks to B.Watson for pointing this out.

# 21/02/2024: Updated to version 0.9.2

# 15/04/2024: Updated to version 0.10.2 Enabled plugin and jpegli support. This adds
#             cjpegli and djpegli tools for encoding and decoding jpeg files.

# 14/08/2024: Updated to version 0.10.3

# 15/09/2024: Updated to version 0.11.0

#---------------------------------------------------------------------------------------------#

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=libjxl
VERSION=${VERSION:-0.11.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
JPG=${JPG:-libjpeg-turbo}
JPGVER=${JPGVER:-3.0.2}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-march=i586 -mtune=i686 -pipe -O2 -fPIC"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-march=i686 -mtune=i686 -pipe -O2 -fPIC"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-march=x86-64 -mtune=generic -pipe -O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee -a $OUTPUT/error-${PRGNAM}.log' ERR

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

rm -rvf $TMP/$PRGNAM-$VERSION/third_party/libjpeg-turbo/
tar -xvf $CWD/$JPG-$JPGVER.tar.gz
cp -av $TMP/$PRGNAM-$VERSION/$JPG-$JPGVER/   $TMP/$PRGNAM-$VERSION/third_party/libjpeg-turbo

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

cmake  -B build -S $TMP/$PRGNAM-$VERSION \
        -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
        -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
        -DCMAKE_INSTALL_PREFIX:PATH=/usr \
        -DCMAKE_INSTALL_LIBDIR:PATH=/usr/lib${LIBDIRSUFFIX} \
        -DCMAKE_INSTALL_BINDIR:PATH=/usr/bin \
        -DCMAKE_INSTALL_MANDIR:PATH=/usr/man \
        -DCMAKE_BUILD_TYPE:STRING=Release \
        -DJPEGXL_VERSION=$VERSION \
        -DJPEGXL_STATIC:BOOL=OFF \
        -DBUILD_TESTING:BOOL=OFF \
        -DENABLE_FUZZERS_DEFAULT:BOOL=OFF \
        -DBUNDLE_LIBPNG_DEFAULT:BOOL=OFF \
        -DJPEGXL_ENABLE_JNI:BOOL=OFF \
        -DJPEGXL_ENABLE_DEVTOOLS:BOOL=OFF \
        -DJPEGXL_ENABLE_DOXYGEN:BOOL=OFF \
        -DJPEGXL_ENABLE_SKCMS:BOOL=OFF \
        -DJPEGXL_BUNDLE_SKCMS:BOOL=OFF \
        -DJPEGXL_ENABLE_BENCHMARK:BOOL=OFF \
        -DJPEGXL_ENABLE_EXAMPLES:BOOL=OFF \
        -DJPEGXL_ENABLE_FUZZERS:BOOL=OFF \
        -DJPEGXL_ENABLE_VIEWERS:BOOL=OFF \
        -DJPEGXL_ENABLE_SIZELESS_VECTORS:BOOL=OFF \
        -DJPEGXL_WARNINGS_AS_ERRORS:BOOL=OFF \
        -DJPEGXL_ENABLE_SJPEG:BOOL=OFF \
        -DCMAKE_DISABLE_FIND_PACKAGE_JPEG:BOOL=OFF \
        -DJPEGXL_ENABLE_JPEGLI_LIBJPEG:BOOL=OFF \
        -DBUILD_SHARED_LIBS:BOOL=ON \
        -DJPEGXL_ENABLE_MANPAGES:BOOL=ON \
        -DJPEGXL_ENABLE_PLUGINS:BOOL=ON \
        -DJPEGXL_ENABLE_TOOLS:BOOL=ON \
        -DJPEGXL_ENABLE_JPEGLI:BOOL=ON \
        -DJPEGXL_ENABLE_TCMALLOC:BOOL=ON \
        -DJPEGXL_ENABLE_PLUGIN_GDKPIXBUF:BOOL=ON \
        -DJPEGXL_ENABLE_OPENEXR:BOOL=ON \
        -DJPEGXL_FORCE_SYSTEM_BROTLI:BOOL=ON \
        -DJPEGXL_FORCE_SYSTEM_GTEST:BOOL=ON \
        -DJPEGXL_FORCE_SYSTEM_HWY:BOOL=ON \
        -DJPEGXL_FORCE_SYSTEM_LCMS2:BOOL=ON

make -C build DESTDIR="$PKG" install

rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

find $PKG -name perllocal.pod -o -name ".packlist" -o -name "*.bs" | xargs rm -f || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS CHANGELOG.md CODE_OF_CONDUCT.md CONTRIBUTING.md CONTRIBUTORS LICENSE PATENTS README.md SECURITY.md BUILDING.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
